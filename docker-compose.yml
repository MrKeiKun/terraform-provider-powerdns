services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: powerdns
      POSTGRES_USER: powerdns
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U powerdns -d powerdns"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    restart: unless-stopped

  pdns-auth:
    image: powerdns/pdns-auth-50
    command:
      - "--api"
      - "--api-key=secret"
      - "--webserver"
      - "--webserver-address=0.0.0.0"
      - "--webserver-allow-from=0.0.0.0/0"
      - "--loglevel=6"
      - "--disable-syslog=yes"
      - "--launch=gpgsql"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=powerdns
      - POSTGRES_PASS=secret
      - POSTGRES_DB=powerdns
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:8081"
    volumes:
      - ./pdns-auth.conf/pdns.conf:/etc/powerdns/pdns.conf
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api", "-H", "X-API-Key: secret"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped

  pdns-rec:
    image: powerdns/pdns-recursor-53
    command:
      - --webserver=yes
      - --webserver-address=0.0.0.0
      - --webserver-port=8082
      - --webserver-allow-from=0.0.0.0/0
      - --api-key=secret
      - --loglevel=6
      - --disable-syslog=yes
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/api", "-H", "X-API-Key: secret"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped
